const { Client, MessageMedia, LocalAuth } = require("whatsapp-web.js");
const qrcode = require('qrcode-terminal');
const path = require('path');


const client = new Client({
    authStrategy: new LocalAuth()
});



let welcomeSent = {}; // Objeto para rastrear se a mensagem de boas-vindas jÃ¡ foi enviada para cada nÃºmero


client.on('qr', (qr) => {
    qrcode.generate(qr, { small: true });
});



client.on('ready', () => {
    console.log('Client is ready!');
    console.log('Pronto...');
});



client.on('message', async msg => {

    if (!welcomeSent[msg.from]) {
        welcomeSent[msg.from] = true;
        const imagePath = path.join(__dirname, './ninasuporte.png');
        const media = MessageMedia.fromFilePath(imagePath);

        await client.sendMessage(msg.from, media, { sendMediaAsDocument: false });
        await client.sendMessage(msg.from, `
ğŸ‘‹ OlÃ¡! Bem-vindo ao Suporte Nix, eu sou a Nina. Como posso te ajudar hoje?

ğŸ¤” Por favor, escolha uma das opÃ§Ãµes abaixo para que eu possa direcionar sua solicitaÃ§Ã£o:

1. Problemas tÃ©cnicos ou erros no aplicativo
2. DÃºvidas sobre funcionalidades e uso do aplicativo
3. QuestÃµes relacionadas a pagamentos e assinaturas
4. Tutorial sobre o nosso app
5. Falar diretamente com o suporte Nix ğŸ§¡

Por favor, responda com o nÃºmero correspondente Ã  sua consulta. Se preferir, digite "Outro" para falar sobre um assunto nÃ£o listado.

ğŸ’¬ Estou aqui para ajudar!
        `);
    }
});

const handleUserResponse = async (msg) => {

    const response = msg.body;
    if (!welcomeSent[msg.from]) {
        return;
    }

    if (!isNaN(response)) {

        switch (response) {
            case '1':
                await client.sendMessage(msg.from, 'VocÃª escolheu a opÃ§Ã£o 1: Problemas tÃ©cnicos ou erros no aplicativo.');
                break;

            case '2':
                await client.sendMessage(msg.from, 'VocÃª escolheu a opÃ§Ã£o 2: DÃºvidas sobre funcionalidades e uso do aplicativo.');
                break;

            case '3':
                await client.sendMessage(msg.from, 'VocÃª escolheu a opÃ§Ã£o 3: QuestÃµes relacionadas a pagamentos e assinaturas.');
                break;

            case '4':
                await client.sendMessage(msg.from, 'VocÃª escolheu a opÃ§Ã£o 4: Tutorial sobre o nosso app.');
                break;

            case '5':
                await client.sendMessage(msg.from, 'VocÃª escolheu a opÃ§Ã£o 5: Falar diretamente com o suporte Nix.\nVocÃª pode comeÃ§ar a conversa agora!');
                await client.sendMessage(msg.from, 'Entendemos sua questÃ£o e jÃ¡ estamos cuidando dela com toda a atenÃ§Ã£o. Fique tranquilo, sua solicitaÃ§Ã£o estÃ¡ em boas mÃ£os e serÃ¡ resolvida o mais breve possÃ­vel. ');
                await client.sendMessage(msg.from, 'Agradecemos pela sua paciÃªncia e confianÃ§a em nosso suporte.');
                // Removendo o ouvinte de mensagem temporariamente para permitir a interaÃ§Ã£o direta com o suporte
                client.off('message', handleUserResponse);
                break;
                
            default:
                await client.sendMessage(msg.from, 'OpÃ§Ã£o invÃ¡lida. Por favor, responda com um nÃºmero de 1 a 5.');
                break;
        }
    } else {
        await client.sendMessage(msg.from, 'OpÃ§Ã£o invÃ¡lida. Por favor, responda com um nÃºmero de 1 a 5.');
    }
};


client.on('message', handleUserResponse);

client.initialize();
